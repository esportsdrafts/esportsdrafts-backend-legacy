openapi: "3.0.0"
info:
  version: 1.0.0
  title: eFantasy auth
consumes:
  - application/json
produces:
  - application/json
  - application/problem+json
servers:
  - url: https://{environment}.efantasy.app/v1
    variables:
      environment:
        default: api    # Production server
        enum:
          - api         # Production server
          - api.dev     # Development server
          - api.local   # Local development server
          - api.staging # Staging server
paths:
  /signup:
    post:
      summary: Create a new account
      operationId: createAccount
      tags:
        - auth
      requestBody:
        description: Account details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
            example:
              username: gamerdude
              email: gamerdude@emailserver.com
      responses:
        '201':
          description: Account successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UUID'
        default:
          description: Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /auth:
    post:
      summary: Authenticate a user using username/email + password returning a JWT for future operations
      operationId: authUser
      tags:
        - auth
      requestBody:
        description: Login details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
            example:
              username: gamerdude
              email: strongpassword
      responses:
        '200':
          description: JWT authentication token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWT'
              example:
                token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InVzZXIxIiwiZXhwIjoxNTQ3OTc0MDgyfQ.2Ye5_w1z3zpD4dSGdRp3s98ZipCNQqmsHRB9vioOx54
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /refresh:
    post:
      summary: Refresh a JWT gaining additional access to the system
      operationId: refreshToken
      tags:
        - auth
      requestBody:
        description: Old unexpired token
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JWT'
      responses:
        '200':
          description: Refreshed JWT authentication token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWT'
              example:
                token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InVzZXIxIiwiZXhwIjoxNTQ3OTc0MDgyfQ.2Ye5_w1z3zpD4dSGdRp3s98ZipCNQqmsHRB9vioOx54
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Account:
      required:
        - email
        - username
        - password
      properties:
        email:
          type: string
        username:
          type: string
        password:
          type: string
    Login:
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string
    UUID:
      required:
        - id
      properties:
        id:
          type: string
    JWT:
      required:
        - token
      properties:
        token:
          type: string
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
