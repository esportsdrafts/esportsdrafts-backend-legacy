openapi: "3.0.0"
info:
  version: 1.0.0
  title: eFantasy auth
consumes:
  - application/json
produces:
  - application/json
  - application/problem+json
paths:
  /v1/auth/register:
    post:
      summary: Create a new account
      operationId: createAccount
      tags:
        - auth
      requestBody:
        description: Account details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
            example:
              username: g4m3rG1rl13
              email: email@hostname.com
              password: veryStr0ngP4ssw0rd
      responses:
        '201':
          description: Account successfully created
        default:
          description: Unknown error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /v1/auth/auth:
    post:
      summary: Authenticate a user returning a JWT for future operations and set session token for browsers
      operationId: performAuth
      tags:
        - auth
      requestBody:
        description: Authentication claims and claim data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthClaim'
      responses:
        '200':
          description: JWT authentication token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWT'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /v1/auth/verify:
    post:
      summary: Verify a user's email
      operationId: verify
      tags:
        - auth
      requestBody:
        description: Verification code
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerificationCode'
      responses:
        '200':
          description: Returned if verification was successful
        '404':
          description: The provided verfication token was not found. Possibly expired.
        default:
          description: Unexpected error occured
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Account:
      required:
        - email
        - username
        - password
      properties:
        email:
          type: string
        username:
          type: string
        password:
          type: string
    AuthClaim:
      required:
        - claim
      properties:
        claim:
          type: string
          enum: [username+password, 2fa, renew]
        code:
          type: string
        username:
          type: string
        password:
          type: string
    JWT:
      required:
        - access_token
        - expires_in
      properties:
        access_token:
          type: string
        id_token:
          type: string
        expires_in:
          type: integer
    VerificationCode:
      required:
        - code
      properties:
        code:
          type: string
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
